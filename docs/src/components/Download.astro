---
import { Icon, LinkCard, CardGrid } from "@astrojs/starlight/components";

const data: { name: string; browser_download_url: string }[] = await fetch(
  "https://api.github.com/repos/ahqsoftwares/tauri-ahq-store/releases/latest"
)
  .then((data) => data.json())
  .then((data) => data.assets)
  .then((data) =>
    data.filter(
      ({ name }: { name: string }) =>
        name.endsWith("en-US.msi") ||
        name.includes("setup") ||
        name.endsWith(".AppImage") ||
        name.endsWith(".deb")
    )
  );

const alpha: { name: string; browser_download_url: string }[] = await fetch(
  "https://api.github.com/repos/ahqsoftwares/tauri-ahq-store/releases"
)
  .then((data) => data.json())
  .then(async (data) => data[0])
  .then(async (data) => data.assets)
  .then((data) =>
    data.filter(
      ({ name }: { name: string }) =>
        name.endsWith(".AppImage") || name.endsWith(".deb")
    )
  );

console.log(alpha);
---

<h2 style="display: flex;">
  <Icon name="rocket" color="green" size="2rem" />
  <span style="margin-left: 12px;">Windows</span>
</h2>
<CardGrid>
  <LinkCard
    title="ðŸš€ Download Setup"
    description="Download the Setup that automates the install (recommended)"
    href={data.find(({ name }) => name.includes("setup"))?.browser_download_url}
  />

  <LinkCard
    title="ðŸ’¿ Download MSI"
    description="Install AHQ Store via offline MSI (requires online post-installation)"
    href={data.find(({ name }) => name.includes(".msi"))?.browser_download_url}
  />
</CardGrid>

<h2 style="display: flex;">
  <Icon name="rocket" color="green" size="2rem" />
  <span style="margin-left: 12px;">Linux</span>
</h2>
<CardGrid>
  <LinkCard
    title="ðŸ“¦ Debian Binary (.deb)"
    description="Debian, Ubuntu, Kali Linux & other  (recommended)"
    href={data.find(({ name }) => name.endsWith(".AppImage"))
      ?.browser_download_url}
  />

  <LinkCard
    title="ðŸ“€ Download AppImage"
    description="Arch, Fedora & almost all other distros"
    href={data.find(({ name }) => name.endsWith(".deb"))?.browser_download_url}
  />

  <LinkCard
    title="ðŸ“¦ Debian Binary (.deb; Alpha)"
    description="Debian, Ubuntu, Kali Linux & other"
    href={alpha.find(({ name }) => name.endsWith(".AppImage"))
      ?.browser_download_url}
  />

  <LinkCard
    title="ðŸ“€ Download AppImage (Alpha)"
    description="Arch, Fedora & almost all other distros"
    href={alpha.find(({ name }) => name.endsWith(".deb"))?.browser_download_url}
  />
</CardGrid>
